name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests for all subdirectories in src/__tests__
      - name: Run Tests
        run: |
          npm run test -- src/__tests__/components/**/*.test.tsx
          npm run test -- src/__tests__/containers/**/*.test.tsx
          npm run test -- src/__tests__/context/**/*.test.tsx
          npm run test -- src/__tests__/hooks/**/*.test.tsx
          npm run test -- src/__tests__/navigation/**/*.test.tsx
          npm run test -- src/__tests__/pagecomponents/**/*.test.tsx
          npm run test -- src/__tests__/pages/**/*.test.tsx
          npm run test -- src/__tests__/screens/**/*.test.tsx
          npm run test -- src/__tests__/theme/**/*.test.tsx
          npm run test -- src/__tests__/utils/**/*.test.tsx

      # Generate coverage report
      - name: Generate Coverage Report
        run: |
          npm run test -- --coverage
          cat coverage/lcov-report/index.html

  build_android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the APK
      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleRelease
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk

  build_ios:
    name: Build iOS IPA
    runs-on: macos-latest
    needs: test

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Install CocoaPods dependencies
      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      # Build the IPA
      - name: Build iOS IPA
        run: |
          cd ios
          xcodebuild -workspace SkullIsland.xcworkspace -scheme SkullIsland -configuration Release -sdk iphoneos archive -archivePath $PWD/build/SkullIsland.xcarchive
          xcodebuild -exportArchive -archivePath $PWD/build/SkullIsland.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build/
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: app-release.ipa
          path: ios/build/app-release.ipa
